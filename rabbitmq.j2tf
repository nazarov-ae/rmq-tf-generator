terraform {
  required_version = ">= 0.13"
  required_providers {
    rabbitmq = {
      source = "cyrilgdn/rabbitmq"
    }
  }
}

variable "url" {}
variable "username" {}
variable "password" {}

provider "rabbitmq" {
  endpoint = var.url
  username = var.username
  password = var.password
}

{% for exchange, service in produces %}
resource "rabbitmq_exchange" "{{ exchange }}" {
  name  = "{{ exchange }}"
  vhost = "/"

  settings {
    type        = "fanout"
    durable     = true
    auto_delete = false
  }
}
{% endfor %}

{% for queue, service in consumes %}
resource "rabbitmq_queue" "{{ service }}_{{ queue }}" {
  name  = "{{ service }}.{{ queue }}"
  vhost = "/"

  settings {
    durable     = true
    auto_delete = false
  }
}
{% endfor %}

{% for queue, service in consumes %}
resource "rabbitmq_queue" "{{ service }}_{{ queue }}_backfill" {
  name  = "{{ service }}.{{ queue }}.backfill"
  vhost = "/"

  settings {
    durable     = true
    auto_delete = false
  }
}
{% endfor %}

{% for queue, service in consumes %}
resource "rabbitmq_binding" "{{ service }}_{{ queue }}_from_{{ queue }}" {
  source           = rabbitmq_exchange.{{ queue }}.name
  vhost            = "/"
  destination      = rabbitmq_queue.{{ service }}_{{ queue }}.name
  destination_type = "queue"
  routing_key      = ""
}
{% endfor %}
